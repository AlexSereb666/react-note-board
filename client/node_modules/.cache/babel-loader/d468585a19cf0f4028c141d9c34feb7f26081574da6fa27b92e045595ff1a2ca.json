{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u0421\\u0435\\u0440\\u0435\\u0431\\u0440\\u044F\\u043A\\u043E\\u0432\\\\Desktop\\\\react-note-board\\\\client\\\\src\\\\components\\\\work-board\\\\WorkBoard.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './WorkBoard.css';\nimport Navbar from '../navbar/Navbar';\nimport ButtonMenu from '../button-menu/ButtonMenu';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WorkBoard = () => {\n  _s();\n  const [notes, setNotes] = useState([]);\n  const [draggedNote, setDraggedNote] = useState(null);\n  const [mousePosition, setMousePosition] = useState({\n    x: 0,\n    y: 0\n  });\n  const possibleColors = ['#ffcccb', '#aaf0d1', '#d0e1f9', '#ffd700', '#ffb6c1'];\n  const createNote = () => {\n    const randomColor = possibleColors[Math.floor(Math.random() * possibleColors.length)];\n    const newNote = {\n      text: `Заметка ${notes.length + 1}`,\n      coordinates: {\n        x: 0,\n        y: 0\n      },\n      color: randomColor\n    };\n    setNotes([...notes, newNote]);\n  };\n  React.useEffect(() => {\n    // Выводим координаты в консоль при изменении mousePosition\n    if (draggedNote !== null) {\n      console.log(`Координаты заметки ${draggedNote + 1}: x=${mousePosition.x}, y=${mousePosition.y}`);\n    }\n  }, [mousePosition, draggedNote]);\n  const handleMouseDown = (index, event) => {\n    // Начинаем отслеживать перемещение при нажатии на заметку\n    setDraggedNote(index);\n    setMousePosition({\n      x: event.clientX,\n      y: event.clientY\n    });\n\n    // Добавляем обработчики событий на весь документ для обработки перемещения за пределы заметки\n    document.addEventListener('mousemove', handleMouseMove);\n    document.addEventListener('mouseup', handleMouseUp);\n  };\n  const handleMouseMove = event => {\n    // Обновляем позицию мыши при движении\n    const updatedMousePosition = {\n      x: event.clientX,\n      y: event.clientY\n    };\n    setMousePosition(updatedMousePosition);\n\n    // Обновляем координаты перетаскиваемой заметки\n    if (draggedNote !== null) {\n      setNotes(prevNotes => {\n        const updatedNotes = [...prevNotes];\n        updatedNotes[draggedNote].coordinates = updatedMousePosition;\n        return updatedNotes;\n      });\n    }\n  };\n  const handleMouseUp = () => {\n    // Прекращаем отслеживать перемещение при отпускании мыши\n    //setDraggedNote(null);\n\n    // Удаляем обработчики событий после отпускания мыши\n    setTimeout(() => {\n      setDraggedNote(null);\n      document.removeEventListener('mousemove', handleMouseMove);\n      document.removeEventListener('mouseup', handleMouseUp);\n    }, 0);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"work-board\",\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"work-board__button\",\n      children: /*#__PURE__*/_jsxDEV(ButtonMenu, {\n        text: \"\\u0421\\u043E\\u0437\\u0434\\u0430\\u0442\\u044C \\u0437\\u0430\\u043C\\u0435\\u0442\\u043A\\u0443\",\n        onClick: createNote,\n        fontSize: \"42px\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"work-board__notes\",\n      children: notes.map((note, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `work-board__note ${index === draggedNote ? 'dragged' : ''}`,\n        style: {\n          left: index === draggedNote ? mousePosition.x : note.coordinates.x,\n          top: index === draggedNote ? mousePosition.y : note.coordinates.y,\n          zIndex: index === draggedNote ? 2 : 1,\n          backgroundColor: note.color // Добавьте это свойство\n        },\n        onMouseDown: event => handleMouseDown(index, event),\n        children: note.text\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 9\n  }, this);\n};\n_s(WorkBoard, \"1ieQawtb9nh6jm2UShzwcCCPTqA=\");\n_c = WorkBoard;\nexport default WorkBoard;\nvar _c;\n$RefreshReg$(_c, \"WorkBoard\");","map":{"version":3,"names":["React","useState","Navbar","ButtonMenu","jsxDEV","_jsxDEV","WorkBoard","_s","notes","setNotes","draggedNote","setDraggedNote","mousePosition","setMousePosition","x","y","possibleColors","createNote","randomColor","Math","floor","random","length","newNote","text","coordinates","color","useEffect","console","log","handleMouseDown","index","event","clientX","clientY","document","addEventListener","handleMouseMove","handleMouseUp","updatedMousePosition","prevNotes","updatedNotes","setTimeout","removeEventListener","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","fontSize","map","note","style","left","top","zIndex","backgroundColor","onMouseDown","_c","$RefreshReg$"],"sources":["C:/Users/Серебряков/Desktop/react-note-board/client/src/components/work-board/WorkBoard.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './WorkBoard.css';\r\nimport Navbar from '../navbar/Navbar';\r\nimport ButtonMenu from '../button-menu/ButtonMenu';\r\n\r\ninterface Note {\r\n    text: string;\r\n    coordinates: { x: number; y: number };\r\n    color: string; // Добавим свойство color\r\n}\r\n\r\nconst WorkBoard = () => {\r\n    const [notes, setNotes] = useState<Note[]>([]);\r\n    const [draggedNote, setDraggedNote] = useState<number | null>(null);\r\n    const [mousePosition, setMousePosition] = useState<{ x: number; y: number }>({ x: 0, y: 0 });\r\n\r\n    const possibleColors = ['#ffcccb', '#aaf0d1', '#d0e1f9', '#ffd700', '#ffb6c1'];\r\n\r\n    const createNote = () => {\r\n        const randomColor = possibleColors[Math.floor(Math.random() * possibleColors.length)];\r\n\r\n        const newNote: Note = {\r\n            text: `Заметка ${notes.length + 1}`,\r\n            coordinates: { x: 0, y: 0 },\r\n            color: randomColor,\r\n        };\r\n\r\n        setNotes([...notes, newNote]);\r\n    };\r\n\r\n    React.useEffect(() => {\r\n        // Выводим координаты в консоль при изменении mousePosition\r\n        if (draggedNote !== null) {\r\n            console.log(`Координаты заметки ${draggedNote + 1}: x=${mousePosition.x}, y=${mousePosition.y}`);\r\n        }\r\n    }, [mousePosition, draggedNote]);\r\n\r\n    const handleMouseDown = (index: number, event: React.MouseEvent) => {\r\n        // Начинаем отслеживать перемещение при нажатии на заметку\r\n        setDraggedNote(index);\r\n        setMousePosition({ x: event.clientX, y: event.clientY });\r\n\r\n        // Добавляем обработчики событий на весь документ для обработки перемещения за пределы заметки\r\n        document.addEventListener('mousemove', handleMouseMove);\r\n        document.addEventListener('mouseup', handleMouseUp);\r\n    };\r\n\r\n    const handleMouseMove = (event: MouseEvent) => {\r\n        // Обновляем позицию мыши при движении\r\n        const updatedMousePosition = { x: event.clientX, y: event.clientY };\r\n        setMousePosition(updatedMousePosition);\r\n    \r\n        // Обновляем координаты перетаскиваемой заметки\r\n        if (draggedNote !== null) {\r\n            setNotes(prevNotes => {\r\n                const updatedNotes = [...prevNotes];\r\n                updatedNotes[draggedNote].coordinates = updatedMousePosition;\r\n                return updatedNotes;\r\n            });\r\n        }\r\n    };\r\n\r\n    const handleMouseUp = () => {\r\n        // Прекращаем отслеживать перемещение при отпускании мыши\r\n        //setDraggedNote(null);\r\n\r\n        // Удаляем обработчики событий после отпускания мыши\r\n        setTimeout(() => {\r\n            setDraggedNote(null);\r\n            document.removeEventListener('mousemove', handleMouseMove);\r\n            document.removeEventListener('mouseup', handleMouseUp);\r\n        }, 0);\r\n    };\r\n\r\n    return (\r\n        <div className='work-board'>\r\n            <Navbar />\r\n\r\n            <div className='work-board__button'>\r\n                <ButtonMenu text='Создать заметку' onClick={createNote} fontSize='42px' />\r\n            </div>\r\n\r\n            {/* Отображаем заметки */}\r\n            <div className='work-board__notes'>\r\n            {notes.map((note, index) => (\r\n                <div\r\n                    key={index}\r\n                    className={`work-board__note ${index === draggedNote ? 'dragged' : ''}`}\r\n                    style={{\r\n                        left: index === draggedNote ? mousePosition.x : note.coordinates.x,\r\n                        top: index === draggedNote ? mousePosition.y : note.coordinates.y,\r\n                        zIndex: index === draggedNote ? 2 : 1,\r\n                        backgroundColor: note.color, // Добавьте это свойство\r\n                    }}\r\n                    onMouseDown={(event) => handleMouseDown(index, event)}\r\n                >\r\n                    {note.text}\r\n                </div>\r\n            ))}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default WorkBoard;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}