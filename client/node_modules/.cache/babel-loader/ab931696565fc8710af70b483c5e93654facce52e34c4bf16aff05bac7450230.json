{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u0421\\u0435\\u0440\\u0435\\u0431\\u0440\\u044F\\u043A\\u043E\\u0432\\\\Desktop\\\\react-note-board\\\\client\\\\src\\\\components\\\\work-board\\\\WorkBoard.tsx\",\n  _s = $RefreshSig$();\n/*\r\nизменение при перемещении\r\n*/\n\nimport React, { useState, useEffect } from 'react';\nimport './WorkBoard.css';\nimport Navbar from '../navbar/Navbar';\nimport ButtonMenu from '../button-menu/ButtonMenu';\nimport { jwtDecode } from 'jwt-decode';\nimport { getNotes, deleteNote, addNote, updateNote } from '../../http/NoteAPI';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WorkBoard = () => {\n  _s();\n  const [notes, setNotes] = useState([]);\n  const [draggedNote, setDraggedNote] = useState(null);\n  const [mousePosition, setMousePosition] = useState({\n    x: 0,\n    y: 0\n  });\n  const possibleColors = ['#c46c6c', '#c95fbf', '#9952c4', '#475cc4', '#47a7c4', '#47c496', '#47c453', '#8ec447', '#c4c047', '#c49247', '#bf3d2c'];\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    const decodedToken = jwtDecode(token);\n    const userId = decodedToken.id;\n    getNotes(userId).then(data => {\n      const updatedNotes = data.map(note => ({\n        id: note.id,\n        title: note.title,\n        description: note.description,\n        date: new Date(note.date),\n        coordinates: {\n          x: note.x,\n          y: note.y\n        },\n        color: possibleColors[Math.floor(Math.random() * possibleColors.length)]\n      }));\n\n      // Присваиваем обновленный массив notes\n      setNotes(updatedNotes);\n    });\n  }, []);\n  const createNote = async () => {\n    const randomColor = possibleColors[Math.floor(Math.random() * possibleColors.length)];\n\n    // Определите область вокруг кнопки, где может появляться заметка\n    const buttonArea = {\n      minX: 10,\n      maxX: window.innerWidth - 200,\n      minY: 10,\n      maxY: window.innerHeight - 200\n    };\n    const randomX = Math.random() * (buttonArea.maxX - buttonArea.minX) + buttonArea.minX;\n    const randomY = Math.random() * (buttonArea.maxY - buttonArea.minY) + buttonArea.minY;\n    const token = localStorage.getItem('token');\n    const decodedToken = jwtDecode(token);\n    const userId = decodedToken.id;\n    const newNote = {\n      id: new Date().getTime(),\n      title: `Заметка ${notes.length + 1}`,\n      description: 'Описание заметки',\n      coordinates: {\n        x: randomX,\n        y: randomY\n      },\n      date: new Date(),\n      color: randomColor\n    };\n    try {\n      // Отправляем данные на сервер и получаем ответ с новой заметкой\n      const addedNote = await addNote(newNote.id, newNote.title, newNote.description, `${newNote.date}`, userId, newNote.coordinates.x, newNote.coordinates.y);\n\n      // Обновляем состояние компонента, добавляя новую заметку\n      setNotes(prevNotes => [...prevNotes, {\n        id: addedNote.id,\n        title: addedNote.title,\n        description: addedNote.description,\n        date: new Date(addedNote.date),\n        coordinates: {\n          x: addedNote.x,\n          y: addedNote.y\n        },\n        color: randomColor\n      }]);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  useEffect(() => {\n    const handleMouseMove = event => {\n      // Обновляем позицию мыши при движении\n      const updatedMousePosition = {\n        x: event.clientX,\n        y: event.clientY\n      };\n      setMousePosition(updatedMousePosition);\n    };\n    const handleMouseUp = () => {\n      if (draggedNote !== null) {\n        console.log('Прекратила перемещение заметка:', notes[draggedNote]);\n      }\n\n      // Прекращаем отслеживать перемещение при отпускании мыши\n      setDraggedNote(null);\n    };\n\n    // Добавляем обработчики при изменении draggedNote\n    if (draggedNote !== null) {\n      document.addEventListener('mousemove', handleMouseMove);\n      document.addEventListener('mouseup', handleMouseUp);\n    }\n\n    // Удаляем обработчики при размонтировании компонента\n    return () => {\n      document.removeEventListener('mousemove', handleMouseMove);\n      document.removeEventListener('mouseup', handleMouseUp);\n    };\n  }, [draggedNote, notes]);\n  const handleMouseDown = (index, event) => {\n    event.stopPropagation();\n\n    // Если клик был на поле ввода, прекращаем обработку\n    if (event.target instanceof HTMLInputElement || event.target instanceof HTMLTextAreaElement || event.target instanceof HTMLElement && event.target.classList.contains('delete-icon')) {\n      return;\n    }\n\n    // Начинаем отслеживать перемещение при нажатии на заметку\n    setDraggedNote(index);\n    setMousePosition({\n      x: event.clientX,\n      y: event.clientY\n    });\n  };\n  const handleTitleChange = (index, event) => {\n    setNotes(prevNotes => {\n      const updatedNotes = [...prevNotes];\n      updatedNotes[index] = {\n        ...updatedNotes[index],\n        title: event.target.value\n      };\n      updateNote(updatedNotes[index].id, updatedNotes[index].title, updatedNotes[index].description, `${updatedNotes[index].date}`, updatedNotes[index].coordinates.x, updatedNotes[index].coordinates.y);\n      return updatedNotes;\n    });\n  };\n  const handleDescriptionChange = (index, event) => {\n    setNotes(prevNotes => {\n      const updatedNotes = [...prevNotes];\n      updatedNotes[index] = {\n        ...updatedNotes[index],\n        description: event.target.value\n      };\n      updateNote(updatedNotes[index].id, updatedNotes[index].title, updatedNotes[index].description, `${updatedNotes[index].date}`, updatedNotes[index].coordinates.x, updatedNotes[index].coordinates.y);\n      return updatedNotes;\n    });\n  };\n  useEffect(() => {\n    if (draggedNote !== null) {\n      setNotes(prevNotes => {\n        const updatedNotes = [...prevNotes];\n        updatedNotes[draggedNote] = {\n          ...updatedNotes[draggedNote],\n          coordinates: mousePosition\n        };\n        return updatedNotes;\n      });\n    }\n  }, [draggedNote, mousePosition]);\n  const handleDeleteNote = noteId => {\n    try {\n      deleteNote(noteId);\n      setNotes(prevNotes => prevNotes.filter(note => note.id !== noteId));\n    } catch (e) {\n      console.log(e);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"work-board\",\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"work-board__button\",\n      children: /*#__PURE__*/_jsxDEV(ButtonMenu, {\n        text: \"\\u0421\\u043E\\u0437\\u0434\\u0430\\u0442\\u044C \\u0437\\u0430\\u043C\\u0435\\u0442\\u043A\\u0443\",\n        onClick: createNote,\n        fontSize: \"42px\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"work-board__notes\",\n      children: notes.map((note, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `work-board__note ${index === draggedNote ? 'dragged' : ''}`,\n        style: {\n          left: index === draggedNote ? mousePosition.x : note.coordinates.x,\n          top: index === draggedNote ? mousePosition.y : note.coordinates.y,\n          zIndex: index === draggedNote ? 2 : 1,\n          backgroundColor: note.color\n        },\n        onMouseDown: event => handleMouseDown(index, event),\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"note-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"delete-icon\",\n            onClick: () => handleDeleteNote(note.id),\n            children: \"X\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"note-title-input\",\n            placeholder: \"\\u0417\\u0430\\u0433\\u043E\\u043B\\u043E\\u0432\\u043E\\u043A\",\n            value: note.title,\n            onChange: e => handleTitleChange(index, e)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            className: \"note-description-textarea\",\n            placeholder: \"\\u041E\\u043F\\u0438\\u0441\\u0430\\u043D\\u0438\\u0435\",\n            value: note.description,\n            onChange: e => handleDescriptionChange(index, e)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"note-date\",\n            children: note.date.toLocaleDateString('ru-RU', {\n              day: '2-digit',\n              month: '2-digit',\n              year: 'numeric',\n              hour: '2-digit',\n              minute: '2-digit'\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 21\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 17\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 196,\n    columnNumber: 9\n  }, this);\n};\n_s(WorkBoard, \"rxzYhLgSOAu6UGr7parfY0dwbtU=\");\n_c = WorkBoard;\nexport default WorkBoard;\nvar _c;\n$RefreshReg$(_c, \"WorkBoard\");","map":{"version":3,"names":["React","useState","useEffect","Navbar","ButtonMenu","jwtDecode","getNotes","deleteNote","addNote","updateNote","jsxDEV","_jsxDEV","WorkBoard","_s","notes","setNotes","draggedNote","setDraggedNote","mousePosition","setMousePosition","x","y","possibleColors","token","localStorage","getItem","decodedToken","userId","id","then","data","updatedNotes","map","note","title","description","date","Date","coordinates","color","Math","floor","random","length","createNote","randomColor","buttonArea","minX","maxX","window","innerWidth","minY","maxY","innerHeight","randomX","randomY","newNote","getTime","addedNote","prevNotes","error","console","handleMouseMove","event","updatedMousePosition","clientX","clientY","handleMouseUp","log","document","addEventListener","removeEventListener","handleMouseDown","index","stopPropagation","target","HTMLInputElement","HTMLTextAreaElement","HTMLElement","classList","contains","handleTitleChange","value","handleDescriptionChange","handleDeleteNote","noteId","filter","e","className","children","fileName","_jsxFileName","lineNumber","columnNumber","text","onClick","fontSize","style","left","top","zIndex","backgroundColor","onMouseDown","type","placeholder","onChange","toLocaleDateString","day","month","year","hour","minute","_c","$RefreshReg$"],"sources":["C:/Users/Серебряков/Desktop/react-note-board/client/src/components/work-board/WorkBoard.tsx"],"sourcesContent":["/*\r\nизменение при перемещении\r\n*/\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport './WorkBoard.css';\r\nimport Navbar from '../navbar/Navbar';\r\nimport ButtonMenu from '../button-menu/ButtonMenu';\r\nimport { jwtDecode } from 'jwt-decode';\r\nimport { AddNoteResponse, getNotes, deleteNote, addNote, updateNote } from '../../http/NoteAPI';\r\n\r\ninterface Note {\r\n    id: number,\r\n    title: string;\r\n    description: string;\r\n    date: Date;\r\n    coordinates: { x: number; y: number };\r\n    color: string;\r\n}\r\n\r\nconst WorkBoard = () => {\r\n    const [notes, setNotes] = useState<Note[]>([]);\r\n    const [draggedNote, setDraggedNote] = useState<number | null>(null);\r\n    const [mousePosition, setMousePosition] = useState<{ x: number; y: number }>({ x: 0, y: 0 });\r\n\r\n    const possibleColors = ['#c46c6c', '#c95fbf', '#9952c4', '#475cc4', '#47a7c4', '#47c496', \r\n    '#47c453', '#8ec447', '#c4c047', '#c49247', '#bf3d2c'];\r\n\r\n    useEffect(() => {\r\n        const token = localStorage.getItem('token');\r\n        const decodedToken: any = jwtDecode(token!);\r\n        const userId = decodedToken.id;\r\n        getNotes(userId).then((data: AddNoteResponse[]) => {\r\n            const updatedNotes = data.map((note) => ({\r\n                id: note.id,\r\n                title: note.title,\r\n                description: note.description,\r\n                date: new Date(note.date),\r\n                coordinates: { x: note.x, y: note.y },\r\n                color: possibleColors[Math.floor(Math.random() * possibleColors.length)],\r\n            }));\r\n    \r\n            // Присваиваем обновленный массив notes\r\n            setNotes(updatedNotes);\r\n        });\r\n    }, []);\r\n\r\n    const createNote = async () => {\r\n        const randomColor = possibleColors[Math.floor(Math.random() * possibleColors.length)];\r\n    \r\n        // Определите область вокруг кнопки, где может появляться заметка\r\n        const buttonArea = {\r\n            minX: 10,\r\n            maxX: window.innerWidth - 200,\r\n            minY: 10,\r\n            maxY: window.innerHeight - 200,\r\n        };\r\n    \r\n        const randomX = Math.random() * (buttonArea.maxX - buttonArea.minX) + buttonArea.minX;\r\n        const randomY = Math.random() * (buttonArea.maxY - buttonArea.minY) + buttonArea.minY;\r\n    \r\n        const token = localStorage.getItem('token');\r\n        const decodedToken: any = jwtDecode(token!);\r\n        const userId = decodedToken.id;\r\n    \r\n        const newNote: Note = {\r\n            id: new Date().getTime(),\r\n            title: `Заметка ${notes.length + 1}`,\r\n            description: 'Описание заметки',\r\n            coordinates: { x: randomX, y: randomY },\r\n            date: new Date(),\r\n            color: randomColor,\r\n        };\r\n    \r\n        try {\r\n            // Отправляем данные на сервер и получаем ответ с новой заметкой\r\n            const addedNote: AddNoteResponse = await addNote(\r\n                newNote.id,\r\n                newNote.title,\r\n                newNote.description,\r\n                `${newNote.date}`,\r\n                userId,\r\n                newNote.coordinates.x,\r\n                newNote.coordinates.y\r\n            );\r\n    \r\n            // Обновляем состояние компонента, добавляя новую заметку\r\n            setNotes((prevNotes) => [...prevNotes, {\r\n                id: addedNote.id,\r\n                title: addedNote.title,\r\n                description: addedNote.description,\r\n                date: new Date(addedNote.date),\r\n                coordinates: { x: addedNote.x, y: addedNote.y },\r\n                color: randomColor,\r\n            }]);\r\n        } catch (error) {\r\n            console.error(error);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        const handleMouseMove = (event: MouseEvent) => {\r\n            // Обновляем позицию мыши при движении\r\n            const updatedMousePosition = { x: event.clientX, y: event.clientY };\r\n            setMousePosition(updatedMousePosition);\r\n        };\r\n\r\n        const handleMouseUp = () => {\r\n            if (draggedNote !== null) {\r\n                console.log('Прекратила перемещение заметка:', notes[draggedNote]);\r\n            }\r\n\r\n            // Прекращаем отслеживать перемещение при отпускании мыши\r\n            setDraggedNote(null);\r\n        };\r\n\r\n        // Добавляем обработчики при изменении draggedNote\r\n        if (draggedNote !== null) {\r\n            document.addEventListener('mousemove', handleMouseMove);\r\n            document.addEventListener('mouseup', handleMouseUp);\r\n        }\r\n\r\n        // Удаляем обработчики при размонтировании компонента\r\n        return () => {\r\n            document.removeEventListener('mousemove', handleMouseMove);\r\n            document.removeEventListener('mouseup', handleMouseUp);\r\n        };\r\n    }, [draggedNote, notes]);\r\n\r\n    const handleMouseDown = (index: number, event: React.MouseEvent) => {\r\n        event.stopPropagation();\r\n\r\n        // Если клик был на поле ввода, прекращаем обработку\r\n        if (\r\n            event.target instanceof HTMLInputElement ||\r\n            event.target instanceof HTMLTextAreaElement ||\r\n            (event.target instanceof HTMLElement && event.target.classList.contains('delete-icon'))\r\n        ) {\r\n            return;\r\n        }\r\n\r\n        // Начинаем отслеживать перемещение при нажатии на заметку\r\n        setDraggedNote(index);\r\n        setMousePosition({ x: event.clientX, y: event.clientY });\r\n    };\r\n\r\n    const handleTitleChange = (index: number, event: React.ChangeEvent<HTMLInputElement>) => {\r\n        setNotes((prevNotes) => {\r\n            const updatedNotes = [...prevNotes];\r\n            updatedNotes[index] = {\r\n                ...updatedNotes[index],\r\n                title: event.target.value,\r\n            };\r\n            updateNote(updatedNotes[index].id, updatedNotes[index].title, updatedNotes[index].description, \r\n                `${updatedNotes[index].date}`, updatedNotes[index].coordinates.x, updatedNotes[index].coordinates.y)\r\n            return updatedNotes;\r\n        });\r\n    };\r\n    \r\n    const handleDescriptionChange = (index: number, event: React.ChangeEvent<HTMLTextAreaElement>) => {\r\n        setNotes((prevNotes) => {\r\n            const updatedNotes = [...prevNotes];\r\n            updatedNotes[index] = {\r\n                ...updatedNotes[index],\r\n                description: event.target.value,\r\n            };\r\n            updateNote(updatedNotes[index].id, updatedNotes[index].title, updatedNotes[index].description, \r\n                `${updatedNotes[index].date}`, updatedNotes[index].coordinates.x, updatedNotes[index].coordinates.y)\r\n            return updatedNotes;\r\n        });\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (draggedNote !== null) {\r\n            setNotes(prevNotes => {\r\n                const updatedNotes = [...prevNotes];\r\n                updatedNotes[draggedNote] = {\r\n                    ...updatedNotes[draggedNote],\r\n                    coordinates: mousePosition,\r\n                };\r\n                return updatedNotes;\r\n            });\r\n        }\r\n    }, [draggedNote, mousePosition]);\r\n\r\n    const handleDeleteNote = (noteId: number) => {\r\n        try {\r\n            deleteNote(noteId)\r\n            setNotes((prevNotes) => prevNotes.filter((note) => note.id !== noteId));\r\n        } catch (e) {\r\n            console.log(e)\r\n        }  \r\n    }\r\n\r\n    return (\r\n        <div className='work-board'>\r\n            <Navbar />\r\n\r\n            <div className='work-board__button'>\r\n                <ButtonMenu text='Создать заметку' onClick={createNote} fontSize='42px' />\r\n            </div>\r\n\r\n            {/* Отображаем заметки */}\r\n            <div className='work-board__notes'>\r\n            {notes.map((note, index) => (\r\n                <div\r\n                    key={index}\r\n                    className={`work-board__note ${index === draggedNote ? 'dragged' : ''}`}\r\n                    style={{\r\n                        left: index === draggedNote ? mousePosition.x : note.coordinates.x,\r\n                        top: index === draggedNote ? mousePosition.y : note.coordinates.y,\r\n                        zIndex: index === draggedNote ? 2 : 1,\r\n                        backgroundColor: note.color,\r\n                    }}\r\n                    onMouseDown={(event) => handleMouseDown(index, event)}\r\n                >\r\n                    <div className=\"note-header\">\r\n                    <div className=\"delete-icon\" onClick={() => handleDeleteNote(note.id)}>\r\n                        X\r\n                    </div>\r\n                        <input\r\n                            type=\"text\"\r\n                            className=\"note-title-input\"\r\n                            placeholder=\"Заголовок\"\r\n                            value={note.title}\r\n                            onChange={(e) => handleTitleChange(index, e)}\r\n                        />\r\n                        <textarea\r\n                            className=\"note-description-textarea\"\r\n                            placeholder=\"Описание\"\r\n                            value={note.description}\r\n                            onChange={(e) => handleDescriptionChange(index, e)}\r\n                        />\r\n                        <div className=\"note-date\">\r\n                            {note.date.toLocaleDateString('ru-RU', {\r\n                                day: '2-digit',\r\n                                month: '2-digit',\r\n                                year: 'numeric',\r\n                                hour: '2-digit',\r\n                                minute: '2-digit',\r\n                            })}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            ))}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default WorkBoard;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}