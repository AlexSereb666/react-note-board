{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u0421\\u0435\\u0440\\u0435\\u0431\\u0440\\u044F\\u043A\\u043E\\u0432\\\\Desktop\\\\react-note-board\\\\client\\\\src\\\\components\\\\modal-form\\\\ModalForm.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './ModalForm.css';\nimport InputForm from '../input-form/InputForm';\nimport ButtonMenu from '../button-menu/ButtonMenu';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ModalForm = () => {\n  _s();\n  const [login, setLogin] = useState('');\n  const [password, setPassword] = useState('');\n  const [checkAuth, setCheckAuth] = useState(true);\n  const [checkTitle, setCheckTitle] = useState('Авторизация');\n  const [checkTextBtn, setCheckTextBtn] = useState('Войти');\n  const [checkTextTrans, setCheckTextTrans] = useState('Регистрация');\n  const handleLoginChange = event => {\n    setLogin(event.target.value);\n  };\n  const handlePasswordChange = event => {\n    setPassword(event.target.value);\n  };\n  const handleCheckAuthChange = event => {\n    setCheckAuth(!checkAuth);\n    if (!checkAuth) {\n      setCheckTitle('Регистрация');\n      setCheckTextBtn('Зарегистрироваться');\n      setCheckTextTrans('Авторизация');\n    } else {\n      setCheckTitle('Авторизация');\n      setCheckTextBtn('Войти');\n      setCheckTextTrans('Регистрация');\n    }\n  };\n  const Auth = () => {\n    console.log(\"писька\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container-modal\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container-modal__name\",\n      children: \"NOTE BOARD\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container-modal__title\",\n      children: checkTitle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container-modal__login\",\n      children: /*#__PURE__*/_jsxDEV(InputForm, {\n        placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u043B\\u043E\\u0433\\u0438\\u043D...\",\n        value: login,\n        onChange: handleLoginChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container-modal__password\",\n      children: /*#__PURE__*/_jsxDEV(InputForm, {\n        placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u043F\\u0430\\u0440\\u043E\\u043B\\u044C...\",\n        value: password,\n        onChange: handlePasswordChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container-modal__button\",\n      children: /*#__PURE__*/_jsxDEV(ButtonMenu, {\n        text: checkTextBtn,\n        onClick: Auth,\n        fontSize: \"26px\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container-modal__choice\",\n      onClick: handleCheckAuthChange,\n      children: checkTextTrans\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n};\n_s(ModalForm, \"D3aR2gi63oMnHwRu0nnrK50XuDc=\");\n_c = ModalForm;\nexport default ModalForm;\nvar _c;\n$RefreshReg$(_c, \"ModalForm\");","map":{"version":3,"names":["React","useState","InputForm","ButtonMenu","jsxDEV","_jsxDEV","ModalForm","_s","login","setLogin","password","setPassword","checkAuth","setCheckAuth","checkTitle","setCheckTitle","checkTextBtn","setCheckTextBtn","checkTextTrans","setCheckTextTrans","handleLoginChange","event","target","value","handlePasswordChange","handleCheckAuthChange","Auth","console","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","onChange","text","onClick","fontSize","_c","$RefreshReg$"],"sources":["C:/Users/Серебряков/Desktop/react-note-board/client/src/components/modal-form/ModalForm.tsx"],"sourcesContent":["import React, { useState, ChangeEvent } from 'react';\r\nimport './ModalForm.css';\r\nimport InputForm from '../input-form/InputForm';\r\nimport ButtonMenu from '../button-menu/ButtonMenu';\r\nimport { observer } from 'mobx-react-lite'\r\n\r\nconst ModalForm = () => {\r\n    const [login, setLogin] = useState<string>('')\r\n    const [password, setPassword] = useState<string>('')\r\n\r\n    const [checkAuth, setCheckAuth] = useState<boolean>(true)\r\n\r\n    const [checkTitle, setCheckTitle] = useState<string>('Авторизация')\r\n    const [checkTextBtn, setCheckTextBtn] = useState<string>('Войти')\r\n    const [checkTextTrans, setCheckTextTrans] = useState<string>('Регистрация')\r\n\r\n    const handleLoginChange = (event: ChangeEvent<HTMLInputElement>) => {\r\n        setLogin(event.target.value);\r\n    };\r\n\r\n    const handlePasswordChange = (event: ChangeEvent<HTMLInputElement>) => {\r\n        setPassword(event.target.value);\r\n    };\r\n\r\n    const handleCheckAuthChange: React.MouseEventHandler<HTMLDivElement> = (event) => {\r\n        setCheckAuth(!checkAuth);\r\n        \r\n        if (!checkAuth) {\r\n            setCheckTitle('Регистрация')\r\n            setCheckTextBtn('Зарегистрироваться')\r\n            setCheckTextTrans('Авторизация')\r\n        } else {\r\n            setCheckTitle('Авторизация')\r\n            setCheckTextBtn('Войти')\r\n            setCheckTextTrans('Регистрация')\r\n        }\r\n    };\r\n\r\n    const Auth: () => void = () => {\r\n        console.log(\"писька\")\r\n    };\r\n\r\n    return (  \r\n        <div className='container-modal'>\r\n            <div className='container-modal__name'>\r\n                NOTE BOARD\r\n            </div>\r\n            <div className='container-modal__title'>\r\n                {checkTitle}\r\n            </div>\r\n            <div className='container-modal__login'>\r\n                <InputForm\r\n                    placeholder=\"Введите логин...\"\r\n                    value={login}\r\n                    onChange={handleLoginChange}\r\n                />\r\n            </div>\r\n            <div className='container-modal__password'>\r\n                <InputForm\r\n                    placeholder=\"Введите пароль...\"\r\n                    value={password}\r\n                    onChange={handlePasswordChange}\r\n                />\r\n            </div>\r\n            <div className='container-modal__button'>\r\n                <ButtonMenu\r\n                    text={checkTextBtn}\r\n                    onClick={Auth}\r\n                    fontSize='26px'\r\n                />\r\n            </div>\r\n            <div className='container-modal__choice' onClick={handleCheckAuthChange}>\r\n                {checkTextTrans}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n \r\nexport default ModalForm;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAqB,OAAO;AACpD,OAAO,iBAAiB;AACxB,OAAOC,SAAS,MAAM,yBAAyB;AAC/C,OAAOC,UAAU,MAAM,2BAA2B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGnD,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAS,EAAE,CAAC;EAC9C,MAAM,CAACS,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAS,EAAE,CAAC;EAEpD,MAAM,CAACW,SAAS,EAAEC,YAAY,CAAC,GAAGZ,QAAQ,CAAU,IAAI,CAAC;EAEzD,MAAM,CAACa,UAAU,EAAEC,aAAa,CAAC,GAAGd,QAAQ,CAAS,aAAa,CAAC;EACnE,MAAM,CAACe,YAAY,EAAEC,eAAe,CAAC,GAAGhB,QAAQ,CAAS,OAAO,CAAC;EACjE,MAAM,CAACiB,cAAc,EAAEC,iBAAiB,CAAC,GAAGlB,QAAQ,CAAS,aAAa,CAAC;EAE3E,MAAMmB,iBAAiB,GAAIC,KAAoC,IAAK;IAChEZ,QAAQ,CAACY,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EAChC,CAAC;EAED,MAAMC,oBAAoB,GAAIH,KAAoC,IAAK;IACnEV,WAAW,CAACU,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EACnC,CAAC;EAED,MAAME,qBAA8D,GAAIJ,KAAK,IAAK;IAC9ER,YAAY,CAAC,CAACD,SAAS,CAAC;IAExB,IAAI,CAACA,SAAS,EAAE;MACZG,aAAa,CAAC,aAAa,CAAC;MAC5BE,eAAe,CAAC,oBAAoB,CAAC;MACrCE,iBAAiB,CAAC,aAAa,CAAC;IACpC,CAAC,MAAM;MACHJ,aAAa,CAAC,aAAa,CAAC;MAC5BE,eAAe,CAAC,OAAO,CAAC;MACxBE,iBAAiB,CAAC,aAAa,CAAC;IACpC;EACJ,CAAC;EAED,MAAMO,IAAgB,GAAGA,CAAA,KAAM;IAC3BC,OAAO,CAACC,GAAG,CAAC,QAAQ,CAAC;EACzB,CAAC;EAED,oBACIvB,OAAA;IAAKwB,SAAS,EAAC,iBAAiB;IAAAC,QAAA,gBAC5BzB,OAAA;MAAKwB,SAAS,EAAC,uBAAuB;MAAAC,QAAA,EAAC;IAEvC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACN7B,OAAA;MAAKwB,SAAS,EAAC,wBAAwB;MAAAC,QAAA,EAClChB;IAAU;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACV,CAAC,eACN7B,OAAA;MAAKwB,SAAS,EAAC,wBAAwB;MAAAC,QAAA,eACnCzB,OAAA,CAACH,SAAS;QACNiC,WAAW,EAAC,8EAAkB;QAC9BZ,KAAK,EAAEf,KAAM;QACb4B,QAAQ,EAAEhB;MAAkB;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC/B;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC,eACN7B,OAAA;MAAKwB,SAAS,EAAC,2BAA2B;MAAAC,QAAA,eACtCzB,OAAA,CAACH,SAAS;QACNiC,WAAW,EAAC,oFAAmB;QAC/BZ,KAAK,EAAEb,QAAS;QAChB0B,QAAQ,EAAEZ;MAAqB;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAClC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC,eACN7B,OAAA;MAAKwB,SAAS,EAAC,yBAAyB;MAAAC,QAAA,eACpCzB,OAAA,CAACF,UAAU;QACPkC,IAAI,EAAErB,YAAa;QACnBsB,OAAO,EAAEZ,IAAK;QACda,QAAQ,EAAC;MAAM;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAClB;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC,eACN7B,OAAA;MAAKwB,SAAS,EAAC,yBAAyB;MAACS,OAAO,EAAEb,qBAAsB;MAAAK,QAAA,EACnEZ;IAAc;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACd,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd,CAAC;AAAA3B,EAAA,CAtEKD,SAAS;AAAAkC,EAAA,GAATlC,SAAS;AAwEf,eAAeA,SAAS;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}