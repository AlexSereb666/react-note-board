{"ast":null,"code":"import { makeAutoObservable } from 'mobx';\nexport default class UserStore {\n  constructor() {\n    this._isAuth = false;\n    this._user = {};\n    makeAutoObservable(this);\n  }\n  setIsAuth(bool) {\n    this._isAuth = bool;\n  }\n  setUser(user) {\n    this._user = user;\n  }\n  get isAuth() {\n    return this._isAuth;\n  }\n  get user() {\n    return this._user;\n  }\n}","map":{"version":3,"names":["makeAutoObservable","UserStore","constructor","_isAuth","_user","setIsAuth","bool","setUser","user","isAuth"],"sources":["C:/Users/Серебряков/Desktop/react-note-board/client/src/store/UserStore.ts"],"sourcesContent":["import { makeAutoObservable } from 'mobx';\r\n\r\ninterface IUser {\r\n    // Определите интерфейс для объекта пользователя\r\n    // Вам, возможно, придется заменить типы полей на соответствующие типы данных пользователя\r\n    // Например, если у пользователя есть поле \"name\" типа string, добавьте его здесь\r\n}\r\n\r\nexport default class UserStore {\r\n    private _isAuth: boolean = false;\r\n    private _user: IUser = {};\r\n\r\n    constructor() {\r\n        makeAutoObservable(this);\r\n    }\r\n\r\n    setIsAuth(bool: boolean): void {\r\n        this._isAuth = bool;\r\n    }\r\n\r\n    setUser(user: IUser): void {\r\n        this._user = user;\r\n    }\r\n\r\n    get isAuth(): boolean {\r\n        return this._isAuth;\r\n    }\r\n\r\n    get user(): IUser {\r\n        return this._user;\r\n    }\r\n}\r\n"],"mappings":"AAAA,SAASA,kBAAkB,QAAQ,MAAM;AAQzC,eAAe,MAAMC,SAAS,CAAC;EAI3BC,WAAWA,CAAA,EAAG;IAAA,KAHNC,OAAO,GAAY,KAAK;IAAA,KACxBC,KAAK,GAAU,CAAC,CAAC;IAGrBJ,kBAAkB,CAAC,IAAI,CAAC;EAC5B;EAEAK,SAASA,CAACC,IAAa,EAAQ;IAC3B,IAAI,CAACH,OAAO,GAAGG,IAAI;EACvB;EAEAC,OAAOA,CAACC,IAAW,EAAQ;IACvB,IAAI,CAACJ,KAAK,GAAGI,IAAI;EACrB;EAEA,IAAIC,MAAMA,CAAA,EAAY;IAClB,OAAO,IAAI,CAACN,OAAO;EACvB;EAEA,IAAIK,IAAIA,CAAA,EAAU;IACd,OAAO,IAAI,CAACJ,KAAK;EACrB;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}