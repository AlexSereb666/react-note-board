{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u0421\\u0435\\u0440\\u0435\\u0431\\u0440\\u044F\\u043A\\u043E\\u0432\\\\Desktop\\\\react-note-board\\\\client\\\\src\\\\components\\\\work-board\\\\WorkBoard.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './WorkBoard.css';\nimport Navbar from '../navbar/Navbar';\nimport ButtonMenu from '../button-menu/ButtonMenu';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WorkBoard = () => {\n  _s();\n  const [isDragging, setIsDragging] = useState(false);\n  const [position, setPosition] = useState({\n    x: 0,\n    y: 0\n  });\n  const createNote = () => {};\n  const handleMouseMove = e => {\n    if (isDragging) {\n      const dx = e.clientX - position.x;\n      const dy = e.clientY - position.y;\n      setPosition({\n        x: e.clientX,\n        y: e.clientY\n      });\n\n      // Логика перемещения элемента\n      // Здесь вы можете добавить код для обновления координат элемента при перемещении мыши.\n    }\n  };\n  const handleMouseUp = () => {\n    setIsDragging(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"work-board\",\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"work-board__button\",\n      children: /*#__PURE__*/_jsxDEV(ButtonMenu, {\n        text: \"\\u0421\\u043E\\u0437\\u0434\\u0430\\u0442\\u044C \\u0437\\u0430\\u043C\\u0435\\u0442\\u043A\\u0443\",\n        onClick: createNote,\n        fontSize: \"42px\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n};\n_s(WorkBoard, \"Gi3gNfE+ZKxqh0QqDuhLGcQ5W6c=\");\n_c = WorkBoard;\nexport default WorkBoard;\nvar _c;\n$RefreshReg$(_c, \"WorkBoard\");","map":{"version":3,"names":["React","useState","Navbar","ButtonMenu","jsxDEV","_jsxDEV","WorkBoard","_s","isDragging","setIsDragging","position","setPosition","x","y","createNote","handleMouseMove","e","dx","clientX","dy","clientY","handleMouseUp","className","children","fileName","_jsxFileName","lineNumber","columnNumber","text","onClick","fontSize","_c","$RefreshReg$"],"sources":["C:/Users/Серебряков/Desktop/react-note-board/client/src/components/work-board/WorkBoard.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './WorkBoard.css';\r\nimport Navbar from '../navbar/Navbar';\r\nimport ButtonMenu from '../button-menu/ButtonMenu';\r\n\r\nconst WorkBoard = () => {\r\n    const [isDragging, setIsDragging] = useState(false);\r\n    const [position, setPosition] = useState({ x: 0, y: 0 });\r\n\r\n    const createNote: () => void = () => {\r\n\r\n    }\r\n\r\n    \r\n    const handleMouseMove = (e: React.MouseEvent) => {\r\n        if (isDragging) {\r\n            const dx = e.clientX - position.x;\r\n            const dy = e.clientY - position.y;\r\n            setPosition({ x: e.clientX, y: e.clientY });\r\n\r\n            // Логика перемещения элемента\r\n            // Здесь вы можете добавить код для обновления координат элемента при перемещении мыши.\r\n        }\r\n    };\r\n\r\n    const handleMouseUp = () => {\r\n        setIsDragging(false);\r\n    };\r\n\r\n    return (\r\n        <div className='work-board'>\r\n            <Navbar/>\r\n\r\n            <div className='work-board__button'>\r\n                <ButtonMenu\r\n                    text=\"Создать заметку\"\r\n                    onClick={createNote}\r\n                    fontSize='42px'\r\n                />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n \r\nexport default WorkBoard;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,iBAAiB;AACxB,OAAOC,MAAM,MAAM,kBAAkB;AACrC,OAAOC,UAAU,MAAM,2BAA2B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;EACnD,MAAM,CAACS,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC;IAAEW,CAAC,EAAE,CAAC;IAAEC,CAAC,EAAE;EAAE,CAAC,CAAC;EAExD,MAAMC,UAAsB,GAAGA,CAAA,KAAM,CAErC,CAAC;EAGD,MAAMC,eAAe,GAAIC,CAAmB,IAAK;IAC7C,IAAIR,UAAU,EAAE;MACZ,MAAMS,EAAE,GAAGD,CAAC,CAACE,OAAO,GAAGR,QAAQ,CAACE,CAAC;MACjC,MAAMO,EAAE,GAAGH,CAAC,CAACI,OAAO,GAAGV,QAAQ,CAACG,CAAC;MACjCF,WAAW,CAAC;QAAEC,CAAC,EAAEI,CAAC,CAACE,OAAO;QAAEL,CAAC,EAAEG,CAAC,CAACI;MAAQ,CAAC,CAAC;;MAE3C;MACA;IACJ;EACJ,CAAC;EAED,MAAMC,aAAa,GAAGA,CAAA,KAAM;IACxBZ,aAAa,CAAC,KAAK,CAAC;EACxB,CAAC;EAED,oBACIJ,OAAA;IAAKiB,SAAS,EAAC,YAAY;IAAAC,QAAA,gBACvBlB,OAAA,CAACH,MAAM;MAAAsB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eAETtB,OAAA;MAAKiB,SAAS,EAAC,oBAAoB;MAAAC,QAAA,eAC/BlB,OAAA,CAACF,UAAU;QACPyB,IAAI,EAAC,uFAAiB;QACtBC,OAAO,EAAEf,UAAW;QACpBgB,QAAQ,EAAC;MAAM;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAClB;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd,CAAC;AAAApB,EAAA,CArCKD,SAAS;AAAAyB,EAAA,GAATzB,SAAS;AAuCf,eAAeA,SAAS;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}