{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u0421\\u0435\\u0440\\u0435\\u0431\\u0440\\u044F\\u043A\\u043E\\u0432\\\\Desktop\\\\react-note-board\\\\client\\\\src\\\\components\\\\work-board\\\\WorkBoard.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './WorkBoard.css';\nimport Navbar from '../navbar/Navbar';\nimport ButtonMenu from '../button-menu/ButtonMenu';\nimport { jwtDecode } from 'jwt-decode';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WorkBoard = () => {\n  _s();\n  const [notes, setNotes] = useState([]);\n  const [draggedNote, setDraggedNote] = useState(null);\n  const [mousePosition, setMousePosition] = useState({\n    x: 0,\n    y: 0\n  });\n  const possibleColors = ['#c46c6c', '#c95fbf', '#9952c4', '#475cc4', '#47a7c4', '#47c496', '#47c453', '#8ec447', '#c4c047', '#c49247', '#bf3d2c'];\n  useEffect(() => {\n    // Получаем токен из localStorage\n    const token = localStorage.getItem('token');\n    const decodedToken = jwtDecode(token);\n    const userId = decodedToken.id;\n    console.log(userId);\n  }, []);\n  const createNote = () => {\n    const randomColor = possibleColors[Math.floor(Math.random() * possibleColors.length)];\n\n    // Определите область вокруг кнопки, где может появляться заметка\n    const buttonArea = {\n      minX: 10,\n      maxX: window.innerWidth - 200,\n      minY: 10,\n      maxY: window.innerHeight - 200\n    };\n    const randomX = Math.random() * (buttonArea.maxX - buttonArea.minX) + buttonArea.minX;\n    const randomY = Math.random() * (buttonArea.maxY - buttonArea.minY) + buttonArea.minY;\n    const newNote = {\n      title: `Заметка ${notes.length + 1}`,\n      description: 'Описание заметки',\n      coordinates: {\n        x: randomX,\n        y: randomY\n      },\n      color: randomColor\n    };\n    setNotes([...notes, newNote]);\n  };\n  React.useEffect(() => {\n    // Выводим координаты в консоль при изменении mousePosition\n    if (draggedNote !== null) {\n      //console.log(`Координаты заметки ${draggedNote + 1}: x=${mousePosition.x}, y=${mousePosition.y}`);\n    }\n  }, [mousePosition, draggedNote]);\n  const handleMouseDown = (index, event) => {\n    event.stopPropagation();\n\n    // Если клик был на поле ввода, прекращаем обработку\n    if (event.target instanceof HTMLInputElement || event.target instanceof HTMLTextAreaElement) {\n      return;\n    }\n\n    // Начинаем отслеживать перемещение при нажатии на заметку\n    setDraggedNote(index);\n    setMousePosition({\n      x: event.clientX,\n      y: event.clientY\n    });\n\n    // Добавляем обработчики событий на весь документ для обработки перемещения за пределы заметки\n    document.addEventListener('mousemove', handleMouseMove);\n    document.addEventListener('mouseup', handleMouseUp);\n  };\n  const handleMouseMove = event => {\n    // Обновляем позицию мыши при движении\n    const updatedMousePosition = {\n      x: event.clientX,\n      y: event.clientY\n    };\n    setMousePosition(updatedMousePosition);\n  };\n  const handleTitleChange = (index, event) => {\n    setNotes(prevNotes => {\n      const updatedNotes = [...prevNotes];\n      updatedNotes[index] = {\n        ...updatedNotes[index],\n        title: event.target.value\n      };\n      return updatedNotes;\n    });\n  };\n  const handleDescriptionChange = (index, event) => {\n    setNotes(prevNotes => {\n      const updatedNotes = [...prevNotes];\n      updatedNotes[index] = {\n        ...updatedNotes[index],\n        description: event.target.value\n      };\n      return updatedNotes;\n    });\n  };\n  useEffect(() => {\n    if (draggedNote !== null) {\n      setNotes(prevNotes => {\n        const updatedNotes = [...prevNotes];\n        updatedNotes[draggedNote] = {\n          ...updatedNotes[draggedNote],\n          coordinates: mousePosition\n        };\n        return updatedNotes;\n      });\n    }\n  }, [draggedNote, mousePosition]);\n  const handleMouseUp = () => {\n    // Прекращаем отслеживать перемещение при отпускании мыши\n    setDraggedNote(null);\n\n    // Удаляем обработчики событий после отпускания мыши\n    document.removeEventListener('mousemove', handleMouseMove);\n    document.removeEventListener('mouseup', handleMouseUp);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"work-board\",\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"work-board__button\",\n      children: /*#__PURE__*/_jsxDEV(ButtonMenu, {\n        text: \"\\u0421\\u043E\\u0437\\u0434\\u0430\\u0442\\u044C \\u0437\\u0430\\u043C\\u0435\\u0442\\u043A\\u0443\",\n        onClick: createNote,\n        fontSize: \"42px\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"work-board__notes\",\n      children: notes.map((note, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `work-board__note ${index === draggedNote ? 'dragged' : ''}`,\n        style: {\n          left: index === draggedNote ? mousePosition.x : note.coordinates.x,\n          top: index === draggedNote ? mousePosition.y : note.coordinates.y,\n          zIndex: index === draggedNote ? 2 : 1,\n          backgroundColor: note.color\n        },\n        onMouseDown: event => handleMouseDown(index, event),\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"note-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"note-title-input\",\n            placeholder: \"\\u0417\\u0430\\u0433\\u043E\\u043B\\u043E\\u0432\\u043E\\u043A\",\n            value: note.title,\n            onChange: e => handleTitleChange(index, e)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            className: \"note-description-textarea\",\n            placeholder: \"\\u041E\\u043F\\u0438\\u0441\\u0430\\u043D\\u0438\\u0435\",\n            value: note.description,\n            onChange: e => handleDescriptionChange(index, e)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"note-date\",\n            children: new Date().toLocaleDateString('ru-RU', {\n              day: '2-digit',\n              month: '2-digit',\n              year: 'numeric',\n              hour: '2-digit',\n              minute: '2-digit'\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 21\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 17\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 129,\n    columnNumber: 9\n  }, this);\n};\n_s(WorkBoard, \"rxzYhLgSOAu6UGr7parfY0dwbtU=\");\n_c = WorkBoard;\nexport default WorkBoard;\nvar _c;\n$RefreshReg$(_c, \"WorkBoard\");","map":{"version":3,"names":["React","useState","useEffect","Navbar","ButtonMenu","jwtDecode","jsxDEV","_jsxDEV","WorkBoard","_s","notes","setNotes","draggedNote","setDraggedNote","mousePosition","setMousePosition","x","y","possibleColors","token","localStorage","getItem","decodedToken","userId","id","console","log","createNote","randomColor","Math","floor","random","length","buttonArea","minX","maxX","window","innerWidth","minY","maxY","innerHeight","randomX","randomY","newNote","title","description","coordinates","color","handleMouseDown","index","event","stopPropagation","target","HTMLInputElement","HTMLTextAreaElement","clientX","clientY","document","addEventListener","handleMouseMove","handleMouseUp","updatedMousePosition","handleTitleChange","prevNotes","updatedNotes","value","handleDescriptionChange","removeEventListener","className","children","fileName","_jsxFileName","lineNumber","columnNumber","text","onClick","fontSize","map","note","style","left","top","zIndex","backgroundColor","onMouseDown","type","placeholder","onChange","e","Date","toLocaleDateString","day","month","year","hour","minute","_c","$RefreshReg$"],"sources":["C:/Users/Серебряков/Desktop/react-note-board/client/src/components/work-board/WorkBoard.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './WorkBoard.css';\r\nimport Navbar from '../navbar/Navbar';\r\nimport ButtonMenu from '../button-menu/ButtonMenu';\r\nimport { jwtDecode } from 'jwt-decode';\r\nimport { getNotes } from '../../http/NoteAPI';\r\n\r\ninterface Note {\r\n    title: string;\r\n    description: string;\r\n    coordinates: { x: number; y: number };\r\n    color: string;\r\n}\r\n\r\nconst WorkBoard = () => {\r\n    const [notes, setNotes] = useState<Note[]>([]);\r\n    const [draggedNote, setDraggedNote] = useState<number | null>(null);\r\n    const [mousePosition, setMousePosition] = useState<{ x: number; y: number }>({ x: 0, y: 0 });\r\n\r\n    const possibleColors = ['#c46c6c', '#c95fbf', '#9952c4', '#475cc4', '#47a7c4', '#47c496', '#47c453', '#8ec447', '#c4c047', '#c49247', '#bf3d2c'];\r\n\r\n    useEffect(() => {\r\n        // Получаем токен из localStorage\r\n        const token = localStorage.getItem('token');\r\n        const decodedToken: any = jwtDecode(token!);\r\n        const userId = decodedToken.id;\r\n        console.log(userId)\r\n    }, []);\r\n\r\n    const createNote = () => {\r\n        const randomColor = possibleColors[Math.floor(Math.random() * possibleColors.length)];\r\n\r\n        // Определите область вокруг кнопки, где может появляться заметка\r\n        const buttonArea = {\r\n            minX: 10,\r\n            maxX: window.innerWidth - 200,\r\n            minY: 10,\r\n            maxY: window.innerHeight - 200,\r\n        };\r\n\r\n        const randomX = Math.random() * (buttonArea.maxX - buttonArea.minX) + buttonArea.minX;\r\n        const randomY = Math.random() * (buttonArea.maxY - buttonArea.minY) + buttonArea.minY;\r\n\r\n        const newNote: Note = {\r\n            title: `Заметка ${notes.length + 1}`,\r\n            description: 'Описание заметки',\r\n            coordinates: { x: randomX, y: randomY },\r\n            color: randomColor,\r\n        };\r\n\r\n        setNotes([...notes, newNote]);\r\n    };\r\n\r\n    React.useEffect(() => {\r\n        // Выводим координаты в консоль при изменении mousePosition\r\n        if (draggedNote !== null) {\r\n            //console.log(`Координаты заметки ${draggedNote + 1}: x=${mousePosition.x}, y=${mousePosition.y}`);\r\n        }\r\n    }, [mousePosition, draggedNote]);\r\n\r\n    const handleMouseDown = (index: number, event: React.MouseEvent) => {\r\n        event.stopPropagation();\r\n\r\n        // Если клик был на поле ввода, прекращаем обработку\r\n        if (event.target instanceof HTMLInputElement || event.target instanceof HTMLTextAreaElement) {\r\n            return;\r\n        }\r\n\r\n        // Начинаем отслеживать перемещение при нажатии на заметку\r\n        setDraggedNote(index);\r\n        setMousePosition({ x: event.clientX, y: event.clientY });\r\n\r\n        // Добавляем обработчики событий на весь документ для обработки перемещения за пределы заметки\r\n        document.addEventListener('mousemove', handleMouseMove);\r\n        document.addEventListener('mouseup', handleMouseUp);\r\n    };\r\n\r\n    const handleMouseMove = (event: MouseEvent) => {\r\n        // Обновляем позицию мыши при движении\r\n        const updatedMousePosition = { x: event.clientX, y: event.clientY };\r\n        setMousePosition(updatedMousePosition);\r\n    };\r\n\r\n    const handleTitleChange = (index: number, event: React.ChangeEvent<HTMLInputElement>) => {\r\n        setNotes((prevNotes) => {\r\n            const updatedNotes = [...prevNotes];\r\n            updatedNotes[index] = {\r\n                ...updatedNotes[index],\r\n                title: event.target.value,\r\n            };\r\n            return updatedNotes;\r\n        });\r\n    };\r\n    \r\n    const handleDescriptionChange = (index: number, event: React.ChangeEvent<HTMLTextAreaElement>) => {\r\n        setNotes((prevNotes) => {\r\n            const updatedNotes = [...prevNotes];\r\n            updatedNotes[index] = {\r\n                ...updatedNotes[index],\r\n                description: event.target.value,\r\n            };\r\n            return updatedNotes;\r\n        });\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (draggedNote !== null) {\r\n            setNotes(prevNotes => {\r\n                const updatedNotes = [...prevNotes];\r\n                updatedNotes[draggedNote] = {\r\n                    ...updatedNotes[draggedNote],\r\n                    coordinates: mousePosition,\r\n                };\r\n                return updatedNotes;\r\n            });\r\n        }\r\n    }, [draggedNote, mousePosition]);\r\n\r\n    const handleMouseUp = () => {\r\n        // Прекращаем отслеживать перемещение при отпускании мыши\r\n        setDraggedNote(null);\r\n\r\n        // Удаляем обработчики событий после отпускания мыши\r\n        document.removeEventListener('mousemove', handleMouseMove);\r\n        document.removeEventListener('mouseup', handleMouseUp);\r\n    };\r\n\r\n    return (\r\n        <div className='work-board'>\r\n            <Navbar />\r\n\r\n            <div className='work-board__button'>\r\n                <ButtonMenu text='Создать заметку' onClick={createNote} fontSize='42px' />\r\n            </div>\r\n\r\n            {/* Отображаем заметки */}\r\n            <div className='work-board__notes'>\r\n            {notes.map((note, index) => (\r\n                <div\r\n                    key={index}\r\n                    className={`work-board__note ${index === draggedNote ? 'dragged' : ''}`}\r\n                    style={{\r\n                        left: index === draggedNote ? mousePosition.x : note.coordinates.x,\r\n                        top: index === draggedNote ? mousePosition.y : note.coordinates.y,\r\n                        zIndex: index === draggedNote ? 2 : 1,\r\n                        backgroundColor: note.color,\r\n                    }}\r\n                    onMouseDown={(event) => handleMouseDown(index, event)}\r\n                >\r\n                    <div className=\"note-header\">\r\n                        <input\r\n                            type=\"text\"\r\n                            className=\"note-title-input\"\r\n                            placeholder=\"Заголовок\"\r\n                            value={note.title}\r\n                            onChange={(e) => handleTitleChange(index, e)}\r\n                        />\r\n                        <textarea\r\n                            className=\"note-description-textarea\"\r\n                            placeholder=\"Описание\"\r\n                            value={note.description}\r\n                            onChange={(e) => handleDescriptionChange(index, e)}\r\n                        />\r\n                        <div className=\"note-date\">\r\n                            {new Date().toLocaleDateString('ru-RU', {\r\n                                day: '2-digit',\r\n                                month: '2-digit',\r\n                                year: 'numeric',\r\n                                hour: '2-digit',\r\n                                minute: '2-digit',\r\n                            })}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            ))}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default WorkBoard;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,iBAAiB;AACxB,OAAOC,MAAM,MAAM,kBAAkB;AACrC,OAAOC,UAAU,MAAM,2BAA2B;AAClD,SAASC,SAAS,QAAQ,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAUvC,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAS,EAAE,CAAC;EAC9C,MAAM,CAACW,WAAW,EAAEC,cAAc,CAAC,GAAGZ,QAAQ,CAAgB,IAAI,CAAC;EACnE,MAAM,CAACa,aAAa,EAAEC,gBAAgB,CAAC,GAAGd,QAAQ,CAA2B;IAAEe,CAAC,EAAE,CAAC;IAAEC,CAAC,EAAE;EAAE,CAAC,CAAC;EAE5F,MAAMC,cAAc,GAAG,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,CAAC;EAEhJhB,SAAS,CAAC,MAAM;IACZ;IACA,MAAMiB,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC3C,MAAMC,YAAiB,GAAGjB,SAAS,CAACc,KAAM,CAAC;IAC3C,MAAMI,MAAM,GAAGD,YAAY,CAACE,EAAE;IAC9BC,OAAO,CAACC,GAAG,CAACH,MAAM,CAAC;EACvB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMI,UAAU,GAAGA,CAAA,KAAM;IACrB,MAAMC,WAAW,GAAGV,cAAc,CAACW,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAGb,cAAc,CAACc,MAAM,CAAC,CAAC;;IAErF;IACA,MAAMC,UAAU,GAAG;MACfC,IAAI,EAAE,EAAE;MACRC,IAAI,EAAEC,MAAM,CAACC,UAAU,GAAG,GAAG;MAC7BC,IAAI,EAAE,EAAE;MACRC,IAAI,EAAEH,MAAM,CAACI,WAAW,GAAG;IAC/B,CAAC;IAED,MAAMC,OAAO,GAAGZ,IAAI,CAACE,MAAM,CAAC,CAAC,IAAIE,UAAU,CAACE,IAAI,GAAGF,UAAU,CAACC,IAAI,CAAC,GAAGD,UAAU,CAACC,IAAI;IACrF,MAAMQ,OAAO,GAAGb,IAAI,CAACE,MAAM,CAAC,CAAC,IAAIE,UAAU,CAACM,IAAI,GAAGN,UAAU,CAACK,IAAI,CAAC,GAAGL,UAAU,CAACK,IAAI;IAErF,MAAMK,OAAa,GAAG;MAClBC,KAAK,EAAG,WAAUlC,KAAK,CAACsB,MAAM,GAAG,CAAE,EAAC;MACpCa,WAAW,EAAE,kBAAkB;MAC/BC,WAAW,EAAE;QAAE9B,CAAC,EAAEyB,OAAO;QAAExB,CAAC,EAAEyB;MAAQ,CAAC;MACvCK,KAAK,EAAEnB;IACX,CAAC;IAEDjB,QAAQ,CAAC,CAAC,GAAGD,KAAK,EAAEiC,OAAO,CAAC,CAAC;EACjC,CAAC;EAED3C,KAAK,CAACE,SAAS,CAAC,MAAM;IAClB;IACA,IAAIU,WAAW,KAAK,IAAI,EAAE;MACtB;IAAA;EAER,CAAC,EAAE,CAACE,aAAa,EAAEF,WAAW,CAAC,CAAC;EAEhC,MAAMoC,eAAe,GAAGA,CAACC,KAAa,EAAEC,KAAuB,KAAK;IAChEA,KAAK,CAACC,eAAe,CAAC,CAAC;;IAEvB;IACA,IAAID,KAAK,CAACE,MAAM,YAAYC,gBAAgB,IAAIH,KAAK,CAACE,MAAM,YAAYE,mBAAmB,EAAE;MACzF;IACJ;;IAEA;IACAzC,cAAc,CAACoC,KAAK,CAAC;IACrBlC,gBAAgB,CAAC;MAAEC,CAAC,EAAEkC,KAAK,CAACK,OAAO;MAAEtC,CAAC,EAAEiC,KAAK,CAACM;IAAQ,CAAC,CAAC;;IAExD;IACAC,QAAQ,CAACC,gBAAgB,CAAC,WAAW,EAAEC,eAAe,CAAC;IACvDF,QAAQ,CAACC,gBAAgB,CAAC,SAAS,EAAEE,aAAa,CAAC;EACvD,CAAC;EAED,MAAMD,eAAe,GAAIT,KAAiB,IAAK;IAC3C;IACA,MAAMW,oBAAoB,GAAG;MAAE7C,CAAC,EAAEkC,KAAK,CAACK,OAAO;MAAEtC,CAAC,EAAEiC,KAAK,CAACM;IAAQ,CAAC;IACnEzC,gBAAgB,CAAC8C,oBAAoB,CAAC;EAC1C,CAAC;EAED,MAAMC,iBAAiB,GAAGA,CAACb,KAAa,EAAEC,KAA0C,KAAK;IACrFvC,QAAQ,CAAEoD,SAAS,IAAK;MACpB,MAAMC,YAAY,GAAG,CAAC,GAAGD,SAAS,CAAC;MACnCC,YAAY,CAACf,KAAK,CAAC,GAAG;QAClB,GAAGe,YAAY,CAACf,KAAK,CAAC;QACtBL,KAAK,EAAEM,KAAK,CAACE,MAAM,CAACa;MACxB,CAAC;MACD,OAAOD,YAAY;IACvB,CAAC,CAAC;EACN,CAAC;EAED,MAAME,uBAAuB,GAAGA,CAACjB,KAAa,EAAEC,KAA6C,KAAK;IAC9FvC,QAAQ,CAAEoD,SAAS,IAAK;MACpB,MAAMC,YAAY,GAAG,CAAC,GAAGD,SAAS,CAAC;MACnCC,YAAY,CAACf,KAAK,CAAC,GAAG;QAClB,GAAGe,YAAY,CAACf,KAAK,CAAC;QACtBJ,WAAW,EAAEK,KAAK,CAACE,MAAM,CAACa;MAC9B,CAAC;MACD,OAAOD,YAAY;IACvB,CAAC,CAAC;EACN,CAAC;EAED9D,SAAS,CAAC,MAAM;IACZ,IAAIU,WAAW,KAAK,IAAI,EAAE;MACtBD,QAAQ,CAACoD,SAAS,IAAI;QAClB,MAAMC,YAAY,GAAG,CAAC,GAAGD,SAAS,CAAC;QACnCC,YAAY,CAACpD,WAAW,CAAC,GAAG;UACxB,GAAGoD,YAAY,CAACpD,WAAW,CAAC;UAC5BkC,WAAW,EAAEhC;QACjB,CAAC;QACD,OAAOkD,YAAY;MACvB,CAAC,CAAC;IACN;EACJ,CAAC,EAAE,CAACpD,WAAW,EAAEE,aAAa,CAAC,CAAC;EAEhC,MAAM8C,aAAa,GAAGA,CAAA,KAAM;IACxB;IACA/C,cAAc,CAAC,IAAI,CAAC;;IAEpB;IACA4C,QAAQ,CAACU,mBAAmB,CAAC,WAAW,EAAER,eAAe,CAAC;IAC1DF,QAAQ,CAACU,mBAAmB,CAAC,SAAS,EAAEP,aAAa,CAAC;EAC1D,CAAC;EAED,oBACIrD,OAAA;IAAK6D,SAAS,EAAC,YAAY;IAAAC,QAAA,gBACvB9D,OAAA,CAACJ,MAAM;MAAAmE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAEVlE,OAAA;MAAK6D,SAAS,EAAC,oBAAoB;MAAAC,QAAA,eAC/B9D,OAAA,CAACH,UAAU;QAACsE,IAAI,EAAC,uFAAiB;QAACC,OAAO,EAAEhD,UAAW;QAACiD,QAAQ,EAAC;MAAM;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzE,CAAC,eAGNlE,OAAA;MAAK6D,SAAS,EAAC,mBAAmB;MAAAC,QAAA,EACjC3D,KAAK,CAACmE,GAAG,CAAC,CAACC,IAAI,EAAE7B,KAAK,kBACnB1C,OAAA;QAEI6D,SAAS,EAAG,oBAAmBnB,KAAK,KAAKrC,WAAW,GAAG,SAAS,GAAG,EAAG,EAAE;QACxEmE,KAAK,EAAE;UACHC,IAAI,EAAE/B,KAAK,KAAKrC,WAAW,GAAGE,aAAa,CAACE,CAAC,GAAG8D,IAAI,CAAChC,WAAW,CAAC9B,CAAC;UAClEiE,GAAG,EAAEhC,KAAK,KAAKrC,WAAW,GAAGE,aAAa,CAACG,CAAC,GAAG6D,IAAI,CAAChC,WAAW,CAAC7B,CAAC;UACjEiE,MAAM,EAAEjC,KAAK,KAAKrC,WAAW,GAAG,CAAC,GAAG,CAAC;UACrCuE,eAAe,EAAEL,IAAI,CAAC/B;QAC1B,CAAE;QACFqC,WAAW,EAAGlC,KAAK,IAAKF,eAAe,CAACC,KAAK,EAAEC,KAAK,CAAE;QAAAmB,QAAA,eAEtD9D,OAAA;UAAK6D,SAAS,EAAC,aAAa;UAAAC,QAAA,gBACxB9D,OAAA;YACI8E,IAAI,EAAC,MAAM;YACXjB,SAAS,EAAC,kBAAkB;YAC5BkB,WAAW,EAAC,wDAAW;YACvBrB,KAAK,EAAEa,IAAI,CAAClC,KAAM;YAClB2C,QAAQ,EAAGC,CAAC,IAAK1B,iBAAiB,CAACb,KAAK,EAAEuC,CAAC;UAAE;YAAAlB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAChD,CAAC,eACFlE,OAAA;YACI6D,SAAS,EAAC,2BAA2B;YACrCkB,WAAW,EAAC,kDAAU;YACtBrB,KAAK,EAAEa,IAAI,CAACjC,WAAY;YACxB0C,QAAQ,EAAGC,CAAC,IAAKtB,uBAAuB,CAACjB,KAAK,EAAEuC,CAAC;UAAE;YAAAlB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACtD,CAAC,eACFlE,OAAA;YAAK6D,SAAS,EAAC,WAAW;YAAAC,QAAA,EACrB,IAAIoB,IAAI,CAAC,CAAC,CAACC,kBAAkB,CAAC,OAAO,EAAE;cACpCC,GAAG,EAAE,SAAS;cACdC,KAAK,EAAE,SAAS;cAChBC,IAAI,EAAE,SAAS;cACfC,IAAI,EAAE,SAAS;cACfC,MAAM,EAAE;YACZ,CAAC;UAAC;YAAAzB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACD,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACL;MAAC,GAjCDxB,KAAK;QAAAqB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAkCT,CACR;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACG,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd,CAAC;AAAChE,EAAA,CApKID,SAAS;AAAAwF,EAAA,GAATxF,SAAS;AAsKf,eAAeA,SAAS;AAAC,IAAAwF,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}